(function(t,i){typeof exports=="object"&&typeof module<"u"?i(exports,require("react/jsx-runtime"),require("react")):typeof define=="function"&&define.amd?define(["exports","react/jsx-runtime","react"],i):(t=typeof globalThis<"u"?globalThis:t||self,i(t.DialogflowReact={},t.jsxRuntime,t.react))})(this,function(t,i,r){"use strict";function f(s){let e=s;const l=new Set;return{getSnapshot:()=>e,setState:o=>{e={...e,...o};for(const n of l)n(e)},subscribe:o=>(l.add(o),()=>l.delete(o))}}function g(){const s=f({dialogs:[]});return{close:o=>{const{dialogs:n}=s.getSnapshot();n.length>0&&(n[n.length-1].resolver(o),s.setState({dialogs:n.slice(0,-1)}))},open:(o,n={})=>new Promise(c=>{const a={dialog:{Component:o,props:n},resolver:c},{dialogs:d}=s.getSnapshot();s.setState({dialogs:[...d,a]})}),...s}}const u=r.createContext({close:()=>null,open:async()=>null}),p=()=>r.useContext(u);function S({children:s,manager:e}){const{dialogs:l}=r.useSyncExternalStore(e.subscribe,e.getSnapshot,e.getSnapshot),o=r.useMemo(()=>({close:e.close,open:e.open}),[e.close,e.open]);return i.jsxs(u.Provider,{value:o,children:[s,l.map((n,c)=>{const{Component:a,props:d}=n.dialog;return i.jsx(a,{...d},c)})]})}t.DialogContext=u,t.DialogProvider=S,t.createDialogflow=g,t.createStore=f,t.useDialog=p,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});
